REGISTER
POST /auth/REGISTER
BODY firstName,lastName, emailOrMobile, password, confirmPassword
RESPONSE
201 { accessToken : String }
400 { message : String }
500 { message : String }

login
POST /auth/login
BODY emailOrMobile, password
RESPONSE
200 { accessToken : String, user: {id, firstName, lastName, profileImage} }
400 { message : String }
500 { message : String }

GET AUTHENTICATED USER 
GET /auth/me
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { user: {id, firstName, lastName, profileImage} }
401 { message : String }
500 { message : String }

UPDATE PROFILE/COVER profileImage
PATH /user
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
BODY profileImage?, coverImage?
RESPONSE
200 { profileImage? : String, coverImage? : String }
400 { message : String}
401 { message : String}
500 { message : string}

GET USER PROFILE BY ID
GET /user/:userId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { user : { id : Number, firstName : String, ... }, status: String, friend : [id : number, firstName : String] }
401 { message : String}
500 { message : string}

REQUEST FRIEND
POST /friend/:receiverId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }

REJECT REQUEST
DELETE /friend/:requesterId/reject
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }

CANCEL REQUEST
DELETE /friend/:receiverId/cancel
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }

UNFRIEND
DELETE /friend/:friendId/unfriend
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }

ACCEPT FRIEND
PATCH /friend/:requesterId
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String } 

CREATE POST
POST /POST
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
BODY message?, image?
RESPONSE
201 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }

GET ALL POST INCLUDE POST FRIENDS
GET /post/friend
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { posts : [ { id : number, user : { firstName : String, ... }, ... }, {  }] }
400 { message : String }
401 { message : String }
500 { message : String }

TOGGLE LIKE
POST /post/:postId/like
HEADER AUTHORIZATION Bearer ACCESS_TOKEN
RESPONSE
200 { message : String }
400 { message : String }
401 { message : String }
500 { message : String }